
package com.menz.titanplayer.ui;

import com.menz.titanplayer.domain.Player;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class PlayerUI extends javax.swing.JFrame {

    private Player backEnd;
    private PlayerUI frontEnd;
    private DefaultListModel libraryListData = new DefaultListModel();
    private DefaultListModel playlistListData = new DefaultListModel();
    private DefaultListModel playlistCollectionListData = new DefaultListModel();
    
    public PlayerUI() {
	initComponents();
        frontEnd = this;
        backEnd = new Player(frontEnd);
        frontEnd.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtPlaylistName = new javax.swing.JTextField();
        btnRemovePlaylistSong = new javax.swing.JButton();
        btnClearPlaylist = new javax.swing.JButton();
        btnSavePlaylist = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstCurrentPlaylist = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        lblCurrentSongInfo = new javax.swing.JLabel();
        lblCurrentSongDuration = new javax.swing.JLabel();
        lblCurrentSongPosition = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnPause = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        btnPlay = new javax.swing.JButton();
        btnForward = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        btnSortByArtist = new javax.swing.JButton();
        btnSortBySong = new javax.swing.JButton();
        btnRemovePlaylist = new javax.swing.JButton();
        btnAddLibrarySong = new javax.swing.JButton();
        btnRemoveLibrarySong = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstLibrary = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstPlaylists = new javax.swing.JList();

        jMenu3.setText("jMenu3");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel6.setText("Playlist Editor");

        btnRemovePlaylistSong.setText("-");
        btnRemovePlaylistSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemovePlaylistSongActionPerformed(evt);
            }
        });

        btnClearPlaylist.setText("- ALL");
        btnClearPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearPlaylistActionPerformed(evt);
            }
        });

        btnSavePlaylist.setText("SAVE");
        btnSavePlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavePlaylistActionPerformed(evt);
            }
        });

        jLabel9.setText("Playlist Name:");

        lstCurrentPlaylist.setModel(playlistListData);
        lstCurrentPlaylist.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstCurrentPlaylist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstCurrentPlaylistMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstCurrentPlaylist);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRemovePlaylistSong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClearPlaylist, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSavePlaylist)
                        .addGap(130, 130, 130))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(210, 210, 210))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtPlaylistName, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPlaylistName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemovePlaylistSong)
                    .addComponent(btnClearPlaylist)
                    .addComponent(btnSavePlaylist))
                .addContainerGap())
        );

        lblCurrentSongInfo.setText("Songs Name");

        lblCurrentSongDuration.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCurrentSongDuration.setText("--:--:--");
        lblCurrentSongDuration.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblCurrentSongPosition.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblCurrentSongPosition.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCurrentSongPosition.setText("--:--:--");

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/menz/titanplayer/ui/back.jpg"))); // NOI18N
        btnBack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnPause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/menz/titanplayer/ui/pause.jpg"))); // NOI18N
        btnPause.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPauseActionPerformed(evt);
            }
        });

        btnStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/menz/titanplayer/ui/stop.jpg"))); // NOI18N
        btnStop.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        btnPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/menz/titanplayer/ui/play.jpg"))); // NOI18N
        btnPlay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayActionPerformed(evt);
            }
        });

        btnForward.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/menz/titanplayer/ui/forward.jpg"))); // NOI18N
        btnForward.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnForward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForwardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblCurrentSongInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPause, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnForward, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblCurrentSongPosition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(27, 27, 27))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblCurrentSongDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCurrentSongInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCurrentSongDuration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCurrentSongPosition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnStop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPlay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnForward, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPause, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel5.setText("Playlists");

        btnSortByArtist.setText("Sort Artist");
        btnSortByArtist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortByArtistActionPerformed(evt);
            }
        });

        btnSortBySong.setText("Sort Title");
        btnSortBySong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortBySongActionPerformed(evt);
            }
        });

        btnRemovePlaylist.setText("-");

        btnAddLibrarySong.setText("+");
        btnAddLibrarySong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddLibrarySongActionPerformed(evt);
            }
        });

        btnRemoveLibrarySong.setText("-");
        btnRemoveLibrarySong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveLibrarySongActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel7.setText("Library");

        lstLibrary.setModel(libraryListData);
        lstLibrary.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstLibrary.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstLibraryMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lstLibrary);

        lstPlaylists.setModel(playlistCollectionListData);
        lstPlaylists.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstPlaylists.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstPlaylistsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(lstPlaylists);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btnRemovePlaylist)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnAddLibrarySong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveLibrarySong))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnSortByArtist)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSortBySong)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSortByArtist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSortBySong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemovePlaylist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddLibrarySong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemoveLibrarySong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setSongInfo(String label, String duration) {
        lblCurrentSongInfo.setText(label);
        lblCurrentSongDuration.setText(duration);
    }
    
/*    public void advancePlaylist() {
        if (lstCurrentPlaylist.getSelectedIndex() == playlistListData.getSize() - 1) {
            lstCurrentPlaylist.setSelectedIndex(0);
        } else {
            lstCurrentPlaylist.setSelectedIndex(lstCurrentPlaylist.getSelectedIndex() + 1);
        }
    }
    
    public void retardPlaylist() {
        if (lstCurrentPlaylist.getSelectedIndex() == 0) {
            lstCurrentPlaylist.setSelectedIndex(playlistListData.getSize() - 1);
        } else {
            lstCurrentPlaylist.setSelectedIndex(lstCurrentPlaylist.getSelectedIndex() + 1);
        }
    } */
    
    public DefaultListModel getLibraryListData() {
        return libraryListData;
    }
    
    public DefaultListModel getPlaylistListData() {
        return playlistListData;
    }
    
    public DefaultListModel getPlaylistCollectionListData() {
        return playlistCollectionListData;
    }
    
    public void setPlaylistSelection(int index) {
        lstCurrentPlaylist.setSelectedIndex(index);
    }
    
    public void setLibrarySelection(int index) {
        lstLibrary.setSelectedIndex(index);
    }
    
    public void setPlaylistCollectionSelection(int index) {
        lstPlaylists.setSelectedIndex(index);
    }
    
    public void setTxtPlaylistName(String name) {
        txtPlaylistName.setText(name);
    }
    
    public int getLstLibrarySelectedIndex() {
        return lstLibrary.getSelectedIndex();
    }
    
    public int getLstPlaylistSelectedIndex() {
        return lstCurrentPlaylist.getSelectedIndex();
    }
    
    public int getLstPlaylistCollectionSelectedIndex() {
        return lstPlaylists.getSelectedIndex();
    }
  
    private void btnAddLibrarySongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddLibrarySongActionPerformed

    }//GEN-LAST:event_btnAddLibrarySongActionPerformed

    private void lstLibraryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstLibraryMouseClicked
        if (evt.getClickCount() == 2) {
            int selected = lstLibrary.getSelectedIndex();
            backEnd.getWorkingPlaylist().addSong(backEnd.getLibrary().getSongByIndex(selected));
        }
    }//GEN-LAST:event_lstLibraryMouseClicked

    private void btnClearPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearPlaylistActionPerformed
        backEnd.getWorkingPlaylist().clearPlaylist();
    }//GEN-LAST:event_btnClearPlaylistActionPerformed

    private void btnRemoveLibrarySongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveLibrarySongActionPerformed
        if (lstLibrary.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "You must select a song in the Library first", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int selected = lstLibrary.getSelectedIndex();
            backEnd.getLibrary().removeSong(backEnd.getLibrary().getSongByIndex(selected));
        }
    }//GEN-LAST:event_btnRemoveLibrarySongActionPerformed

    private void btnRemovePlaylistSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemovePlaylistSongActionPerformed
        if (lstCurrentPlaylist.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "You must select a song in the Playlist first", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
        int selected = lstCurrentPlaylist.getSelectedIndex();
        backEnd.getWorkingPlaylist().removeSong(backEnd.getWorkingPlaylist().getSongByIndex(selected));
        }
    }//GEN-LAST:event_btnRemovePlaylistSongActionPerformed

    private void btnSortByArtistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortByArtistActionPerformed
        backEnd.getLibrary().sortLibraryByArtist();
    }//GEN-LAST:event_btnSortByArtistActionPerformed

    private void btnSortBySongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortBySongActionPerformed
        backEnd.getLibrary().sortLibraryByTitle();
    }//GEN-LAST:event_btnSortBySongActionPerformed

    private void lstCurrentPlaylistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstCurrentPlaylistMouseClicked
        if (evt.getClickCount() == 2) {
            int selected = lstCurrentPlaylist.getSelectedIndex();
            backEnd.setWorkingSong(selected);
        }
    }//GEN-LAST:event_lstCurrentPlaylistMouseClicked

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        backEnd.stopWorkingSong();
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPauseActionPerformed
        backEnd.pauseWorkingSong();
    }//GEN-LAST:event_btnPauseActionPerformed

    private void btnForwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForwardActionPerformed
        backEnd.loadNextSongFromList();
    }//GEN-LAST:event_btnForwardActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        backEnd.loadPreviousSongFromList();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayActionPerformed
        backEnd.playWorkingSong();
    }//GEN-LAST:event_btnPlayActionPerformed

    private void btnSavePlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePlaylistActionPerformed
        backEnd.addPlaylistToCollection(txtPlaylistName.getText());
    }//GEN-LAST:event_btnSavePlaylistActionPerformed

    private void lstPlaylistsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstPlaylistsMouseClicked
        if (evt.getClickCount() == 2) {
            int selected = lstPlaylists.getSelectedIndex();
            backEnd.loadSavedPlaylist(selected);
        }    }//GEN-LAST:event_lstPlaylistsMouseClicked


    public static void main(String args[]) {
	/* Set the Nimbus look and feel */
	//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
	 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
	 */
	try {
	    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
		if ("Nimbus".equals(info.getName())) {
		    javax.swing.UIManager.setLookAndFeel(info.getClassName());
		    break;
		}
	    }
	} catch (ClassNotFoundException ex) {
	    java.util.logging.Logger.getLogger(PlayerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (InstantiationException ex) {
	    java.util.logging.Logger.getLogger(PlayerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (IllegalAccessException ex) {
	    java.util.logging.Logger.getLogger(PlayerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (javax.swing.UnsupportedLookAndFeelException ex) {
	    java.util.logging.Logger.getLogger(PlayerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	}
	//</editor-fold>

	/* Create and display the form */
	java.awt.EventQueue.invokeLater(new Runnable() {
	    public void run() {
		new PlayerUI();
	    }
	});
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddLibrarySong;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClearPlaylist;
    private javax.swing.JButton btnForward;
    private javax.swing.JButton btnPause;
    private javax.swing.JButton btnPlay;
    private javax.swing.JButton btnRemoveLibrarySong;
    private javax.swing.JButton btnRemovePlaylist;
    private javax.swing.JButton btnRemovePlaylistSong;
    private javax.swing.JButton btnSavePlaylist;
    private javax.swing.JButton btnSortByArtist;
    private javax.swing.JButton btnSortBySong;
    private javax.swing.JButton btnStop;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCurrentSongDuration;
    private javax.swing.JLabel lblCurrentSongInfo;
    private javax.swing.JLabel lblCurrentSongPosition;
    private javax.swing.JList lstCurrentPlaylist;
    private javax.swing.JList lstLibrary;
    private javax.swing.JList lstPlaylists;
    private javax.swing.JTextField txtPlaylistName;
    // End of variables declaration//GEN-END:variables
}
